openapi: 3.0.3
info:
  title: Pokedex API
  version: 1.0.0
  description: A pokemon management app
paths:
  /pokedex/:
    get:
      operationId: pokedex_list
      description: API endpoint to display all Pokedex Creatures
      parameters:
      - in: query
        name: generation
        schema:
          type: integer
      - in: query
        name: legendary
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: type_1
        schema:
          type: string
      - in: query
        name: type_2
        schema:
          type: string
      tags:
      - pokedex
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPokedexCreatureList'
          description: ''
  /pokedex/{id}/:
    get:
      operationId: pokedex_retrieve
      description: API endpoint to display all Pokedex Creatures
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokedex creature.
        required: true
      tags:
      - pokedex
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PokedexCreatureDetail'
          description: ''
  /pokemon/:
    get:
      operationId: pokemon_list
      description: API endpoint to manage a pokemon
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - pokemon
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPokemonList'
          description: ''
    post:
      operationId: pokemon_create
      description: API endpoint to manage a pokemon
      tags:
      - pokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pokemon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pokemon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pokemon'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
          description: ''
  /pokemon/{id}/:
    get:
      operationId: pokemon_retrieve
      description: API endpoint to manage a pokemon
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokemon.
        required: true
      tags:
      - pokemon
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
          description: ''
    put:
      operationId: pokemon_update
      description: API endpoint to manage a pokemon
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokemon.
        required: true
      tags:
      - pokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pokemon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pokemon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pokemon'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
          description: ''
    patch:
      operationId: pokemon_partial_update
      description: API endpoint to manage a pokemon
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokemon.
        required: true
      tags:
      - pokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPokemon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPokemon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPokemon'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
          description: ''
    delete:
      operationId: pokemon_destroy
      description: API endpoint to manage a pokemon
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokemon.
        required: true
      tags:
      - pokemon
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pokemon/{id}/give_xp/:
    post:
      operationId: pokemon_give_xp_create
      description: Action to give extra experience points to a pokemon
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pokemon.
        required: true
      tags:
      - pokemon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pokemon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pokemon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pokemon'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
          description: ''
components:
  schemas:
    PaginatedPokedexCreatureList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PokedexCreature'
    PaginatedPokemonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Pokemon'
    PatchedPokemon:
      type: object
      description: Serializer of Pokemon object
      properties:
        id:
          type: integer
          readOnly: true
        pokedex_creature:
          type: integer
        trainer:
          type: integer
          nullable: true
        surname:
          type: string
          nullable: true
          maxLength: 100
        level:
          type: integer
          readOnly: true
        experience:
          type: integer
          readOnly: true
    PokedexCreature:
      type: object
      description: Serializer of PokedexCreature object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        type_1:
          type: string
          maxLength: 20
        type_2:
          type: string
          nullable: true
          maxLength: 20
        generation:
          type: integer
          maximum: 32767
          minimum: 0
        legendary:
          type: boolean
      required:
      - generation
      - id
      - name
      - type_1
    PokedexCreatureDetail:
      type: object
      description: Serializer to retrieve detail of PokedexCreature object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        ref_number:
          type: integer
          maximum: 32767
          minimum: 0
        type_1:
          type: string
          maxLength: 20
        type_2:
          type: string
          nullable: true
          maxLength: 20
        total:
          type: integer
          maximum: 32767
          minimum: 0
        hp:
          type: integer
          maximum: 32767
          minimum: 0
        attack:
          type: integer
          maximum: 32767
          minimum: 0
        defense:
          type: integer
          maximum: 32767
          minimum: 0
        special_attack:
          type: integer
          maximum: 32767
          minimum: 0
        special_defence:
          type: integer
          maximum: 32767
          minimum: 0
        speed:
          type: integer
          maximum: 32767
          minimum: 0
        generation:
          type: integer
          maximum: 32767
          minimum: 0
        legendary:
          type: boolean
      required:
      - attack
      - defense
      - generation
      - hp
      - id
      - name
      - ref_number
      - special_attack
      - special_defence
      - speed
      - total
      - type_1
    Pokemon:
      type: object
      description: Serializer of Pokemon object
      properties:
        id:
          type: integer
          readOnly: true
        pokedex_creature:
          type: integer
        trainer:
          type: integer
          nullable: true
        surname:
          type: string
          nullable: true
          maxLength: 100
        level:
          type: integer
          readOnly: true
        experience:
          type: integer
          readOnly: true
      required:
      - experience
      - id
      - level
      - pokedex_creature
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
